#!/usr/local/bin/perl
#
# Copyright (c) 2021 The NomadBSD Project. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

my $PATH_XDOTOOL  = '/usr/local/bin/xdotool';
my $PATH_XWININFO = '/usr/local/bin/xwininfo';

my ($panel_x, $panel_y, $mouse_y, $panel_height);
my ($old_mouse_x, $old_mouse_y, $fh);

#
# Get height and position of the tint2 panel
#
open($fh, "$PATH_XWININFO -name tint2|")
	or die("Couldn't open xwininfo: $!");
foreach (<$fh>) {
	if (/^\s*Height:\s*([0-9]+)$/) {
		$panel_height = $1;
	} elsif (/^\s*Absolute upper-left X:\s*([0-9]+)$/) {
		$panel_x = $1;
	} elsif (/^\s*Absolute upper-left Y:\s*([0-9]+)$/) {
		$panel_y = $1;
	}
}
close($fh);

#
# Get current mouse pointer position
#
open($fh, "$PATH_XDOTOOL getmouselocation|")
	or die("Couldn't open xdotool: $!");
foreach (<$fh>) {
	if (/\s*x:([0-9]+)\s*/) {
		$old_mouse_x = $1;
	}
	if (/\s*y:([0-9]+)\s*/) {
		$old_mouse_y = $1;
	}
}

#
# Move mouse pointer to the panel's x-postion, and the panel's
# lower most (or upper most if the panel is at the bottom of the
# screen) pixel, and "press" the right mouse button to make the
# Openbox menu appear.
#
if ($pheight - $py < 0) {
	$mouse_y = $panel_y - $panel_height + 1;
} else {
	$mouse_y = $panel_height - 1;
}
system("$PATH_XDOTOOL mousemove $panel_x $mouse_y click 3");

# Restore previous mouse position
system("$PATH_XDOTOOL mousemove $old_mouse_x $old_mouse_y");
